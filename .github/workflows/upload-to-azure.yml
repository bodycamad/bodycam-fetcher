name: Upload and Index

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Run ID that contains the bodycam-bundle artifact'
        required: true
        type: string

jobs:
  upload-and-index:
    runs-on: ubuntu-24.04   # GitHub-hosted runner (24.04 이미지)

    steps:
    # 1) Git checkout ──────────────────────────────────────────────
    - uses: actions/checkout@v4

    # 2) Azure 로그인 ──────────────────────────────────────────────
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: false

    # 3) **문제였던 아티팩트 다운로드** ───────────────────────────────
    #    run-id + name 을 모두 지정해야 0 artifact 버그를 피할 수 있습니다.
    - name: Download bodycam-bundle artifact
      uses: actions/download-artifact@v4
      with:
        run-id: ${{ inputs.run_id }}      # 워크플로-디스패치 입력값
        name:  bodycam-bundle             # ← 반드시 명시!
        path:  ./downloaded_data

    # 4) Blob Storage로 업로드 ─────────────────────────────────────
    - name: Upload to Azure Blob if files exist
      run: |
        if [ -d "./downloaded_data" ] && [ "$(ls -A downloaded_data)" ]; then
          az storage blob upload-batch \
            --account-name   "$AZ_ACCOUNT" \
            --account-key    "$AZ_STORAGE_KEY" \
            --destination    "$AZ_CONTAINER" \
            --source         "./downloaded_data" \
            --if-none-match="*"
          echo "▶ Blob 업로드 완료"
        else
          echo "▶ 다운로드된 artifact가 없습니다. 업로드를 건너뜁니다."
        fi
      env:
        AZ_ACCOUNT:      ${{ secrets.AZ_ACCOUNT }}
        AZ_STORAGE_KEY:  ${{ secrets.AZ_STORAGE_KEY }}
        AZ_CONTAINER:    ${{ secrets.AZ_CONTAINER }}

    # 5) Video Indexer 호출 ────────────────────────────────────────
    - name: Send each media file to Video Indexer
      run: |
        # 업로드된 파일이 없으면 종료
        if [ ! -d "./downloaded_data" ] || [ -z "$(ls -A downloaded_data)" ]; then
          echo "▶ 업로드할 파일이 없으므로 Video Indexer 요청도 건너뜁니다."
          exit 0
        fi

        ACCESS_TOKEN=$(az rest --method get \
          --uri "https://api.videoindexer.ai/Auth/$VI_LOCATION/Accounts/$VI_ACCOUNT_ID/AccessToken?allowEdit=true" \
          --headers "Ocp-Apim-Subscription-Key:$VI_API_KEY" \
          --output tsv)

        for BLOB in $(az storage blob list \
            --account-name   "$AZ_ACCOUNT" \
            --account-key    "$AZ_STORAGE_KEY" \
            --container-name "$AZ_CONTAINER" \
            --output tsv | cut -f1); do

          if [[ $BLOB =~ \.(mp4|mov|m4a|wav)$ ]]; then
            VIDEO_URL="https://$AZ_ACCOUNT.blob.core.windows.net/$AZ_CONTAINER/$BLOB"
            echo "• Indexing $VIDEO_URL"
            az rest --method post \
              --uri "https://api.videoindexer.ai/$VI_LOCATION/Accounts/$VI_ACCOUNT_ID/Videos" \
              --headers "Content-Type:application/json" \
              --body "{\"accessToken\":\"$ACCESS_TOKEN\",\"name\":\"$(basename "$BLOB")\",\"videoUrl\":\"$VIDEO_URL\"}" \
              --output none
            sleep 2        # 과도한 동시 요청 방지
          fi
        done

        echo "▶ Video Indexer 요청 완료"
      env:
        VI_LOCATION:     ${{ secrets.VI_LOCATION }}
        VI_ACCOUNT_ID:   ${{ secrets.VI_ACCOUNT_ID }}
        VI_API_KEY:      ${{ secrets.VI_API_KEY }}
        AZ_ACCOUNT:      ${{ secrets.AZ_ACCOUNT }}
        AZ_STORAGE_KEY:  ${{ secrets.AZ_STORAGE_KEY }}
        AZ_CONTAINER:    ${{ secrets.AZ_CONTAINER }}
